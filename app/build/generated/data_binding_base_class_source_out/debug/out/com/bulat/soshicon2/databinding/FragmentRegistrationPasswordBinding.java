// Generated by view binder compiler. Do not edit!
package com.bulat.soshicon2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bulat.soshicon2.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRegistrationPasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout containerRegistrationPassword;

  @NonNull
  public final TextView errorText;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final EditText password;

  @NonNull
  public final MaterialButton passwordBtn;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView textView2;

  private FragmentRegistrationPasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout containerRegistrationPassword, @NonNull TextView errorText,
      @NonNull ImageView imageView, @NonNull EditText password, @NonNull MaterialButton passwordBtn,
      @NonNull TextView textView1, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.containerRegistrationPassword = containerRegistrationPassword;
    this.errorText = errorText;
    this.imageView = imageView;
    this.password = password;
    this.passwordBtn = passwordBtn;
    this.textView1 = textView1;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRegistrationPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRegistrationPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_registration_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRegistrationPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout containerRegistrationPassword = (ConstraintLayout) rootView;

      id = R.id.error_text;
      TextView errorText = ViewBindings.findChildViewById(rootView, id);
      if (errorText == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.password_btn;
      MaterialButton passwordBtn = ViewBindings.findChildViewById(rootView, id);
      if (passwordBtn == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new FragmentRegistrationPasswordBinding((ConstraintLayout) rootView,
          containerRegistrationPassword, errorText, imageView, password, passwordBtn, textView1,
          textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
